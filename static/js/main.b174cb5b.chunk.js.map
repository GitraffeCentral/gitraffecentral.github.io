{"version":3,"sources":["resources/interactive-rebase-mac.png","components/header/index.tsx","pages/home/index.tsx","pages/bitbucket/index.tsx","pages/gitlab/index.tsx","components/navigator/index.tsx","components/application/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","title","ghost","extra","href","type","shape","size","style","background","borderWidth","verticalAlign","ArrowRightOutlined","Footer","Layout","Content","Title","Typography","Home","Paragraph","Text","width","minHeight","display","flexDirection","align","justify","flex","fontSize","color","textAlign","marginTop","marginBottom","src","InteractiveRebaseMac","filter","level","fontWeight","Bitbucket","location","useLocation","authCode","URLSearchParams","search","get","deeplink","Date","now","console","log","height","backgroundColor","alignContent","border","textDecoration","Gitlab","Navigator","exact","path","process","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b174cb5b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/interactive-rebase-mac.a1a29c2a.png\";","import { PageHeader, Button, Row } from \"antd\";\r\nimport { ArrowRightOutlined } from '@ant-design/icons';\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Header = () => {\r\n    return (\r\n    <PageHeader className=\"header_root\" title=\"\" ghost={false} extra={\r\n        <a href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\">\r\n            <Button type=\"primary\" shape=\"round\" size={\"large\"}  style={{background: \"linear-gradient(45deg, #ee0979, #ff6a00)\", borderWidth: '0', verticalAlign: \"middle\"}}>\r\n                    Request Access <ArrowRightOutlined />\r\n            </Button>\r\n    </a>} />\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Layout, Typography, Row } from \"antd\";\r\nimport {AppleFilled, WindowsFilled } from \"@ant-design/icons\";\r\nimport { FaUbuntu } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\nimport InteractiveRebaseMac from \"../../resources/interactive-rebase-mac.png\";\r\nimport Header from \"../../components/header\";\r\n\r\nconst { Content, Footer } = Layout;\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div>\r\n       <Header />\r\n    <div\r\n      style={{\r\n        background: \"#1f1f1f\",\r\n        width: \"100%\",\r\n        minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Row\r\n        align=\"middle\"\r\n        justify=\"center\"\r\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\r\n      >\r\n        <Title\r\n          style={{ fontSize: \"8vh\", color: \"#a0aec0\", textAlign: \"center\" }}\r\n        >\r\n          Aspirin for Version Control.\r\n        </Title>\r\n      </Row>\r\n      <Row\r\n        align=\"middle\"\r\n        justify=\"center\"\r\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\r\n      >\r\n        <div style={{ color: \"white\", fontSize: \"2vh\", textAlign: \"center\" }}>\r\n          <strong>Gitraffe</strong> helps you leverage the power of Git through\r\n          a beautiful and intuitive interface.\r\n          <br />\r\n          Minimize Git hiccups with Interactive Rebase, Cherry Picking, Reflog,\r\n          Commit + History Editing, Quick Actions, and Tailored Workspaces.\r\n          <br />\r\n          <br/>\r\n          Available on Windows, Mac, and Linux.\r\n        </div>\r\n      </Row>\r\n      <Row\r\n        align=\"middle\"\r\n        justify=\"center\"\r\n        style={{ width: \"100\", flex: \"1 1\", marginTop: \"5vh\", marginBottom: \"5vh\" }}\r\n      >\r\n        <img src={InteractiveRebaseMac} width=\"60%\" style={{filter: \"drop-shadow(0 0 1rem #2a2a2a)\"}}/>\r\n      </Row>\r\n\r\n      <Footer style={{\r\n        background: \"#1f1f1f\",\r\n        width: \"100%\",\r\n      }}>\r\n              <Row\r\n        align=\"middle\"\r\n        justify=\"center\"\r\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\r\n      >\r\n        <Title level={5} style={{color: \"white\", fontWeight: \"normal\"}}>Team Raffe, 2021</Title>\r\n      </Row>\r\n      </Footer>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Layout, Typography, Row, Button} from \"antd\";\r\nimport { IoLogoBitbucket } from \"react-icons/io\";\r\nimport \"./index.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Bitbucket = () => {\r\n const location = useLocation();\r\n let authCode = new URLSearchParams(location.search).get(\"code\");\r\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=bitbucket&time=${Date.now()}`\r\n console.log(deeplink);\r\n\r\n  return (\r\n    <Layout>\r\n        <Layout.Header \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}\r\n        />\r\n        <Layout.Content\r\n            style = {{\r\n                height : \"80vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}        \r\n        >\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <IoLogoBitbucket size={128} style = {{color : \"white\"}}/>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\r\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\r\n                    className=\"buttons flatbutt\"\r\n                    style= {{\r\n                        backgroundColor : \"#0357D1\",\r\n                        border : \"0\"\r\n                    }}\r\n                    >\r\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Bitbucket Authentication</a>\r\n                    </Button>\r\n            </Row>\r\n        </Layout.Content>\r\n        <Layout.Footer \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}\r\n        />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Bitbucket;","import React from \"react\";\r\nimport { Layout, Typography, Row, Button} from \"antd\";\r\nimport { FaGitlab } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Gitlab = () => {\r\n const location = useLocation();\r\n let authCode = new URLSearchParams(location.search).get(\"code\");\r\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=gitlab&time=${Date.now()}`\r\n console.log(deeplink);\r\n\r\n  return (\r\n    <Layout>\r\n        <Layout.Header \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}\r\n        />\r\n        <Layout.Content\r\n            style = {{\r\n                height : \"80vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}        \r\n        >\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <FaGitlab size={128} style = {{color : \"white\"}}/>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\r\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\r\n                    className=\"buttons flatbutt\"\r\n                    style= {{\r\n                        backgroundColor : \"#E2432A\",\r\n                        border : \"0\"\r\n                    }}\r\n                    >\r\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Gitlab Authentication</a>\r\n                    </Button>\r\n            </Row>\r\n        </Layout.Content>\r\n        <Layout.Footer \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}\r\n        />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Gitlab;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch as RouterSwitch } from \"react-router-dom\";\r\nimport Home from \"../../pages/home\";\r\nimport Bitbucket from \"../../pages/bitbucket\";\r\nimport Gitlab from \"../../pages/gitlab\";\r\n\r\nconst Navigator = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <RouterSwitch>\r\n        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\r\n          <Home />\r\n        </Route>\r\n        <Route\r\n          exact\r\n          path={process.env.PUBLIC_URL + \"/oauth2/bitbucket/callback\"}\r\n        >\r\n          <Bitbucket />\r\n        </Route>\r\n        <Route exact path={process.env.PUBLIC_URL + \"/oauth2/gitlab/callback\"}>\r\n          <Gitlab />\r\n        </Route>\r\n      </RouterSwitch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Layout } from \"antd\";\r\nimport Navigator from \"../navigator\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout className=\"application_layout\">\r\n      <Layout.Content>\r\n        <Navigator />\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/application\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}