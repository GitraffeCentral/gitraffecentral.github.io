{"version":3,"sources":["resources/interactive-rebase-mac.png","resources/logo.png","resources/raffy.svg","resources/commit-files.png","resources/cherry-pick.png","components/header/index.tsx","pages/bitbucket/index.tsx","pages/gitlab/index.tsx","components/portal/index.tsx","pages/home/index.tsx","components/navigator/index.tsx","components/application/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","title","src","Logo","height","ghost","extra","style","display","alignItems","target","rel","href","type","shape","size","background","borderWidth","verticalAlign","ArrowRightOutlined","Title","Typography","Bitbucket","location","useLocation","authCode","URLSearchParams","search","get","deeplink","Date","now","console","log","width","backgroundColor","Content","align","justify","color","fontWeight","alignContent","marginTop","border","textDecoration","Footer","Gitlab","PortalImage","props","imageSrc","noImageStyle","imageStyle","filter","maxWidth","minWidth","flex","TextOnly","fontSize","slogan","description","textExtra","WithImage","flexWrap","imageFirst","margin","textMargin","Portal","borderRadius","padding","Layout","withRouter","Paragraph","Text","provider","minHeight","flexDirection","CommitFilesPic","Raffy","InteractiveRebaseMac","GithubFilled","position","top","GitlabFilled","CherryPickPic","Navigator","basename","process","exact","path","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c92677e0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/interactive-rebase-mac.a1a29c2a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.3bdd78b9.png\";","module.exports = __webpack_public_path__ + \"static/media/raffy.88288197.svg\";","module.exports = __webpack_public_path__ + \"static/media/commit-files.23b2bdf0.png\";","module.exports = __webpack_public_path__ + \"static/media/cherry-pick.a401bb45.png\";","import { PageHeader, Button, Row } from \"antd\";\r\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport \"./index.css\";\r\nimport Logo from \"../../resources/logo.png\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <PageHeader\r\n      className=\"header_root\"\r\n      title={\r\n        <div>\r\n          <img src={Logo} height=\"48px\" />\r\n        </div>\r\n      }\r\n      ghost={false}\r\n      extra={\r\n        <div style={{ display: \"flex\", alignItems: \"center\", height: \"100%\" }}>\r\n          <a\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n            href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\"\r\n          >\r\n            <Button\r\n              type=\"primary\"\r\n              shape=\"round\"\r\n              size={\"large\"}\r\n              style={{\r\n                background: \"linear-gradient(45deg, #ee0979, #ff6a00)\",\r\n                borderWidth: \"0\",\r\n                verticalAlign: \"middle\",\r\n              }}\r\n            >\r\n              Request Access <ArrowRightOutlined />\r\n            </Button>\r\n          </a>\r\n        </div>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Layout, Typography, Row, Button} from \"antd\";\r\nimport { IoLogoBitbucket } from \"react-icons/io\";\r\nimport \"./index.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Bitbucket = () => {\r\n const location = useLocation();\r\n let authCode = new URLSearchParams(location.search).get(\"code\");\r\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=bitbucket&time=${Date.now()}`\r\n console.log(deeplink);\r\n\r\n  return (\r\n    <Layout>\r\n        <Layout.Header \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}\r\n        />\r\n        <Layout.Content\r\n            style = {{\r\n                height : \"80vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}        \r\n        >\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <IoLogoBitbucket size={128} style = {{color : \"white\"}}/>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\r\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\r\n                    className=\"buttons flatbutt\"\r\n                    style= {{\r\n                        backgroundColor : \"#0357D1\",\r\n                        border : \"0\"\r\n                    }}\r\n                    >\r\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Bitbucket Authentication</a>\r\n                    </Button>\r\n            </Row>\r\n        </Layout.Content>\r\n        <Layout.Footer \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#2684FF\"\r\n            }}\r\n        />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Bitbucket;","import React from \"react\";\r\nimport { Layout, Typography, Row, Button} from \"antd\";\r\nimport { FaGitlab } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Gitlab = () => {\r\n const location = useLocation();\r\n let authCode = new URLSearchParams(location.search).get(\"code\");\r\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=gitlab&time=${Date.now()}`\r\n console.log(deeplink);\r\n\r\n  return (\r\n    <Layout>\r\n        <Layout.Header \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}\r\n        />\r\n        <Layout.Content\r\n            style = {{\r\n                height : \"80vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}        \r\n        >\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\">\r\n                <FaGitlab size={128} style = {{color : \"white\"}}/>\r\n            </Row>\r\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\r\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\r\n                    className=\"buttons flatbutt\"\r\n                    style= {{\r\n                        backgroundColor : \"#E2432A\",\r\n                        border : \"0\"\r\n                    }}\r\n                    >\r\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Gitlab Authentication</a>\r\n                    </Button>\r\n            </Row>\r\n        </Layout.Content>\r\n        <Layout.Footer \r\n            style = {{\r\n                height : \"10vh\",\r\n                width: \"100vw\",\r\n                backgroundColor: \"#FC6D27\"\r\n            }}\r\n        />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Gitlab;","import React, { CSSProperties } from \"react\";\r\nimport \"./index.css\";\r\n\r\ntype PortalProps = {\r\n  color: \"orange\" | \"magenta\" | \"red\" | \"black\";\r\n  children?: JSX.Element | React.ReactNode;\r\n  style?: CSSProperties;\r\n  imageSrc?: string;\r\n  imageFirst?: boolean;\r\n  title?: string;\r\n  slogan?: string;\r\n  description?: string | JSX.Element;\r\n  imageStyle?: CSSProperties;\r\n  noImageStyle?: boolean;\r\n  textMargin?: string;\r\n  textExtra?: JSX.Element | React.ReactNode;\r\n};\r\n\r\nconst PortalImage = (props: PortalProps) => (\r\n  <img\r\n    src={props.imageSrc}\r\n    style={\r\n      props.noImageStyle\r\n        ? props.imageStyle\r\n        : {\r\n            filter: \"drop-shadow(0 0 1rem #2a2a2a)\",\r\n            maxWidth: \"100%\",\r\n            minWidth: \"min(400px, 100%)\",\r\n            flex: \"2 1\",\r\n            ...props.imageStyle,\r\n          }\r\n    }\r\n  />\r\n);\r\n\r\nconst TextOnly = (props: PortalProps) => (\r\n  <div style={{ color: \"black\", fontSize: \"18px\" }}>\r\n    {props.title && (\r\n      <div style={{ fontSize: \"28px\", fontWeight: 650 }}>{props.title}</div>\r\n    )}\r\n    {props.slogan && (\r\n      <div style={{ fontSize: \"36px\", fontWeight: 600 }}>{props.slogan}</div>\r\n    )}\r\n    {props.description && (\r\n      <div style={{ fontSize: \"22px\", fontWeight: 550 }}>\r\n        {props.description}\r\n      </div>\r\n    )}\r\n    {props.textExtra}\r\n  </div>\r\n);\r\n\r\nconst WithImage = (props: PortalProps) => (\r\n  <div style={{ color: \"black\", fontSize: \"18px\" }}>\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        alignItems: \"center\",\r\n        color: \"rgba(255, 255, 255, 0.95)\",\r\n      }}\r\n    >\r\n      {props.imageFirst && <PortalImage {...props} />}\r\n      <div style={{ flex: \"1 1\", margin: props.textMargin ?? \"5vw\" }}>\r\n        <div\r\n          style={{\r\n            fontSize: \"28px\",\r\n            fontWeight: 650,\r\n            color: \"rgba(255, 255, 255, 0.7)\",\r\n          }}\r\n        >\r\n          {props.title}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: \"36px\",\r\n            fontWeight: 600,\r\n            color: \"rgba(255, 255, 255, 0.95)\",\r\n            marginTop: \"4px\",\r\n          }}\r\n        >\r\n          {props.slogan}\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontSize: \"22px\",\r\n            fontWeight: 550,\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          {props.description}\r\n        </div>\r\n      </div>\r\n      {!props.imageFirst && <PortalImage {...props} />}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst Portal = (props: PortalProps) => {\r\n  return (\r\n    <div\r\n      className={`portal-${props.color}`}\r\n      style={{\r\n        borderRadius: \"10px\",\r\n        padding: \"48px\",\r\n        margin: \"18px\",\r\n        ...props.style,\r\n      }}\r\n    >\r\n      {props.imageSrc ? <WithImage {...props} /> : <TextOnly {...props} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Portal;\r\n","import React from \"react\";\r\nimport { Layout, Typography, Row, Button } from \"antd\";\r\nimport {\r\n  AppleFilled,\r\n  ArrowRightOutlined,\r\n  GithubFilled,\r\n  GitlabFilled,\r\n  WindowsFilled,\r\n} from \"@ant-design/icons\";\r\nimport { FaBitbucket, FaUbuntu } from \"react-icons/fa\";\r\nimport \"./index.css\";\r\nimport InteractiveRebaseMac from \"../../resources/interactive-rebase-mac.png\";\r\nimport Header from \"../../components/header\";\r\nimport { useLocation, withRouter } from \"react-router\";\r\nimport Bitbucket from \"../bitbucket\";\r\nimport Gitlab from \"../gitlab\";\r\nimport Raffy from \"../../resources/raffy.svg\";\r\nimport Portal from \"../../components/portal\";\r\nimport CommitFilesPic from \"../../resources/commit-files.png\";\r\nimport CherryPickPic from \"../../resources/cherry-pick.png\";\r\n\r\nconst { Content, Footer } = Layout;\r\nconst { Title, Paragraph, Text } = Typography;\r\n\r\nconst Home = () => {\r\n  const location = useLocation();\r\n  let authCode = new URLSearchParams(location.search).get(\"code\");\r\n  let provider = new URLSearchParams(location.search).get(\"provider\");\r\n\r\n  console.log(location);\r\n\r\n  if (provider == \"bitbucket\") return <Bitbucket />;\r\n  else if (provider == \"gitlab\") return <Gitlab />;\r\n  else {\r\n    return (\r\n      <div style={{ background: \"white\", width: \"100%\" }}>\r\n        <Header />\r\n        <div\r\n          style={{\r\n            //background: \"#1f1f1f\",\r\n            width: \"100%\",\r\n            maxWidth: \"100%\",\r\n            minHeight: \"100vh\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            padding: \"0px 24px 24px 24px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexWrap: \"wrap\",\r\n            }}\r\n          >\r\n            <Portal\r\n              color=\"orange\"\r\n              style={{ flex: \"1.25 1\", minWidth: \"400px\" }}\r\n              title=\"gitraffe\"\r\n              slogan=\"Aspirin for Version Control.\"\r\n              description=\"A beautiful and completely free Git client\"\r\n            />\r\n\r\n            <Portal\r\n              color=\"magenta\"\r\n              style={{ flex: \"1 1\", minWidth: \"400px\" }}\r\n              slogan=\"Our private beta has started!\"\r\n              description=\"Simply fill out a form to request access, and we will be in touch.\"\r\n              textExtra={\r\n                <div style={{ marginTop: \"8px\" }}>\r\n                  <a\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\"\r\n                  >\r\n                    <Button className=\"gitraffe-button\" size=\"large\">\r\n                      Request Access <ArrowRightOutlined />\r\n                    </Button>\r\n                  </a>\r\n                </div>\r\n              }\r\n            />\r\n          </div>\r\n\r\n          <Portal\r\n            color=\"red\"\r\n            title=\"Commit Changes\"\r\n            slogan=\"Just select the files to commit and describe your changes.\"\r\n            description=\"Not ready to commit? Stash all changes with one click.\"\r\n            imageSrc={CommitFilesPic}\r\n          />\r\n\r\n          <Portal\r\n            color=\"black\"\r\n            imageFirst\r\n            imageSrc={Raffy}\r\n            noImageStyle\r\n            imageStyle={{ height: \"128px\" }}\r\n            slogan=\"Meet raffy, your personal Git assistant.\"\r\n            description=\"Here to guide you while you are using Git commands.\"\r\n            textMargin=\"0px 0px 0px 24px\"\r\n          />\r\n\r\n          <Portal\r\n            color=\"magenta\"\r\n            imageSrc={InteractiveRebaseMac}\r\n            imageFirst\r\n            title=\"Interactive Rebase\"\r\n            slogan=\"The power to change commit history, at your fingertips.\"\r\n            description=\"Easily change previous commit messages, squash commits,fixup commits, and re-order commits.\"\r\n          />\r\n\r\n          <Portal\r\n            color=\"orange\"\r\n            slogan=\"There is no limit to how many accounts you can connect to Gitraffe.\"\r\n            description={\r\n              <div>\r\n                Connect your <GithubFilled />,{\" \"}\r\n                <FaBitbucket style={{ position: \"relative\", top: \"3px\" }} /> and{\" \"}\r\n                <GitlabFilled /> accounts. Or just use your name and email.\r\n                Gitraffe is free for both personal and professional use.\r\n              </div>\r\n            }\r\n          />\r\n\r\n          <Portal\r\n            color=\"red\"\r\n            imageSrc={CherryPickPic}\r\n            title=\"Cherry Pick\"\r\n            slogan=\"Accidentally committed to the wrong branch?\"\r\n            description=\"Don't worry, you can quickly copy commits from one branch to another.\"\r\n          />\r\n\r\n          {/*<Row\r\n            align=\"middle\"\r\n            justify=\"center\"\r\n            style={{ width: \"100%\", flex: \"0 0 auto\" }}\r\n          >\r\n            <div\r\n              style={{ color: \"white\", fontSize: \"2vh\", textAlign: \"center\" }}\r\n            >\r\n              <strong>Gitraffe</strong> helps you leverage the power of Git\r\n              through a beautiful and intuitive interface.\r\n              <br />\r\n              Minimize Git hiccups with Interactive Rebase, Cherry Picking,\r\n              Reflog, Commit + History Editing, Quick Actions, and Tailored\r\n              Workspaces.\r\n              <br />\r\n              <br />\r\n              Available on Windows, Mac, and Linux.\r\n            </div>\r\n          </Row>*/}\r\n\r\n          <Footer\r\n            style={{\r\n              borderRadius: \"10px\",\r\n              margin: \"18px\",\r\n              background: \"var(--brand-foreground-color)\",\r\n            }}\r\n          >\r\n            <Row\r\n              align=\"middle\"\r\n              justify=\"center\"\r\n              style={{ width: \"100%\", flex: \"0 0 auto\" }}\r\n            >\r\n              <div\r\n                style={{ color: \"white\", fontSize: \"16px\", fontWeight: 550 }}\r\n              >\r\n                Created by Team Raffe 2020-2021\r\n              </div>\r\n            </Row>\r\n          </Footer>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withRouter(Home);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch as RouterSwitch } from \"react-router-dom\";\r\nimport Home from \"../../pages/home\";\r\nimport Bitbucket from \"../../pages/bitbucket\";\r\nimport Gitlab from \"../../pages/gitlab\";\r\n\r\nconst Navigator = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <RouterSwitch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </RouterSwitch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Navigator;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Layout } from \"antd\";\r\nimport Navigator from \"../navigator\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout className=\"application_layout\">\r\n      <Layout.Content>\r\n        <Navigator />\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/application\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}