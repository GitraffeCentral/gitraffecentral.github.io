{"version":3,"sources":["resources/interactive-rebase-mac.png","components/header/index.tsx","pages/home/index.tsx","components/navigator/index.tsx","components/application/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","title","ghost","extra","href","type","shape","size","style","background","borderWidth","verticalAlign","ArrowRightOutlined","Footer","Layout","Content","Title","Typography","Home","Paragraph","Text","width","minHeight","display","flexDirection","align","justify","flex","fontSize","color","textAlign","marginTop","marginBottom","src","InteractiveRebaseMac","filter","level","fontWeight","Navigator","exact","path","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"yFAAAA,EAAOC,QAAU,IAA0B,oD,8PCgB5BC,G,OAXA,WACX,OACA,kBAAC,IAAD,CAAYC,UAAU,cAAcC,MAAM,GAAGC,OAAO,EAAOC,MACvD,uBAAGC,KAAK,gDACJ,kBAAC,IAAD,CAAQC,KAAK,UAAUC,MAAM,QAAQC,KAAM,QAAUC,MAAO,CAACC,WAAY,2CAA4CC,YAAa,IAAKC,cAAe,WAAtJ,kBACuB,kBAACC,EAAA,EAAD,Y,8DCHlBC,GAAWC,IAApBC,QAAoBD,IAAXD,QACTG,EAA2BC,IAA3BD,MAgEOE,GAhEoBD,IAApBE,UAAoBF,IAATG,KAEb,WACX,OACE,yBACEZ,MAAO,CACLC,WAAY,UACZY,MAAO,OACPC,UAAW,QACXC,QAAS,OACTC,cAAe,WAGjB,kBAAC,IAAD,CACEC,MAAM,SACNC,QAAQ,SACRlB,MAAO,CAAEa,MAAO,OAAQM,KAAM,aAE9B,kBAACX,EAAD,CACER,MAAO,CAAEoB,SAAU,MAAOC,MAAO,UAAWC,UAAW,WADzD,iCAMF,kBAAC,IAAD,CACEL,MAAM,SACNC,QAAQ,SACRlB,MAAO,CAAEa,MAAO,OAAQM,KAAM,aAE9B,yBAAKnB,MAAO,CAAEqB,MAAO,QAASD,SAAU,MAAOE,UAAW,WACxD,4CADF,oFAGE,6BAHF,0IAME,6BACA,6BAPF,0CAWF,kBAAC,IAAD,CACEL,MAAM,SACNC,QAAQ,SACRlB,MAAO,CAAEa,MAAO,MAAOM,KAAM,MAAOI,UAAW,MAAOC,aAAc,QAEpE,yBAAKC,IAAKC,IAAsBb,MAAM,MAAMb,MAAO,CAAC2B,OAAQ,oCAG9D,kBAACtB,EAAD,CAAQL,MAAO,CACbC,WAAY,UACZY,MAAO,SAED,kBAAC,IAAD,CACNI,MAAM,SACNC,QAAQ,SACRlB,MAAO,CAAEa,MAAO,OAAQM,KAAM,aAE9B,kBAACX,EAAD,CAAOoB,MAAO,EAAG5B,MAAO,CAACqB,MAAO,QAASQ,WAAY,WAArD,yBChDOC,EAbG,WAEd,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,UCOLC,EAXH,WACV,OACE,kBAAC,IAAD,CAAQzC,UAAU,sBAChB,kBAAC,EAAD,MACA,kBAAC,IAAOe,QAAR,KACE,kBAAC,EAAD,SCCY2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD8HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACNC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f946b7bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/interactive-rebase-mac.a1a29c2a.png\";","import { PageHeader, Button, Row } from \"antd\";\nimport { ArrowRightOutlined } from '@ant-design/icons';\nimport React from \"react\";\nimport \"./index.css\";\n\nconst Header = () => {\n    return (\n    <PageHeader className=\"header_root\" title=\"\" ghost={false} extra={\n        <a href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\">\n            <Button type=\"primary\" shape=\"round\" size={\"large\"}  style={{background: \"linear-gradient(45deg, #ee0979, #ff6a00)\", borderWidth: '0', verticalAlign: \"middle\"}}>\n                    Request Access <ArrowRightOutlined />\n            </Button>\n    </a>} />\n    );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Layout, Typography, Row } from \"antd\";\nimport {AppleFilled, WindowsFilled } from \"@ant-design/icons\";\nimport { FaUbuntu } from \"react-icons/fa\";\nimport \"./index.css\";\nimport InteractiveRebaseMac from \"../../resources/interactive-rebase-mac.png\";\n\nconst { Content, Footer } = Layout;\nconst { Title, Paragraph, Text } = Typography;\n\nconst Home = () => {\n  return (\n    <div\n      style={{\n        background: \"#1f1f1f\",\n        width: \"100%\",\n        minHeight: \"100vh\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Row\n        align=\"middle\"\n        justify=\"center\"\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\n      >\n        <Title\n          style={{ fontSize: \"8vh\", color: \"#a0aec0\", textAlign: \"center\" }}\n        >\n          Aspirin for Version Control.\n        </Title>\n      </Row>\n      <Row\n        align=\"middle\"\n        justify=\"center\"\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\n      >\n        <div style={{ color: \"white\", fontSize: \"2vh\", textAlign: \"center\" }}>\n          <strong>Gitraffe</strong> helps you leverage the power of Git through\n          a beautiful and intuitive interface.\n          <br />\n          Minimize Git hiccups with Interactive Rebase, Cherry Picking, Reflog,\n          Commit + History Editing, Quick Actions, and Tailored Workspaces.\n          <br />\n          <br/>\n          Available on Windows, Mac, and Linux.\n        </div>\n      </Row>\n      <Row\n        align=\"middle\"\n        justify=\"center\"\n        style={{ width: \"100\", flex: \"1 1\", marginTop: \"5vh\", marginBottom: \"5vh\" }}\n      >\n        <img src={InteractiveRebaseMac} width=\"60%\" style={{filter: \"drop-shadow(0 0 1rem #2a2a2a)\"}}/>\n      </Row>\n\n      <Footer style={{\n        background: \"#1f1f1f\",\n        width: \"100%\",\n      }}>\n              <Row\n        align=\"middle\"\n        justify=\"center\"\n        style={{ width: \"100%\", flex: \"0 0 auto\" }}\n      >\n        <Title level={5} style={{color: \"white\", fontWeight: \"normal\"}}>Team Raffe, 2021</Title>\n      </Row>\n      </Footer>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch as RouterSwitch } from \"react-router-dom\";\nimport Home from \"../../pages/home\";\n\nconst Navigator = () => {\n\n    return (\n        <BrowserRouter>\n            <RouterSwitch>\n                <Route exact path=\"/\">\n                    <Home />\n                </Route>\n            </RouterSwitch>\n        </BrowserRouter>\n    )\n}\n\nexport default Navigator;","import React from \"react\";\nimport \"./index.css\";\nimport { Layout } from \"antd\";\nimport Header from \"../header\";\nimport Navigator from \"../navigator\";\n\nconst App = () => {\n  return (\n    <Layout className=\"application_layout\">\n      <Header />\n      <Layout.Content>\n        <Navigator />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/application\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}