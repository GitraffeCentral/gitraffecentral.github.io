{"version":3,"sources":["resources/interactive-rebase-mac.png","resources/logo.png","resources/raffy.svg","resources/commit-files.png","resources/cherry-pick.png","pages/home/gitlab.svg","pages/home/github.svg","pages/home/bitbucket.svg","components/header/index.tsx","pages/bitbucket/index.tsx","pages/gitlab/index.tsx","components/portal/index.tsx","pages/home/index.tsx","components/navigator/index.tsx","components/application/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","title","src","Logo","height","ghost","extra","style","display","alignItems","target","rel","href","Title","Typography","Bitbucket","location","useLocation","authCode","URLSearchParams","search","get","deeplink","Date","now","console","log","width","backgroundColor","Content","align","justify","color","fontWeight","alignContent","size","marginTop","type","shape","border","textDecoration","Footer","Gitlab","PortalImage","props","imageSrc","noImageStyle","imageStyle","filter","maxWidth","minWidth","flex","TextOnly","fontSize","slogan","description","textExtra","WithImage","flexWrap","imageFirst","margin","textMargin","Portal","borderRadius","padding","Layout","withRouter","Paragraph","Text","provider","background","boxSizing","borderWidth","verticalAlign","ArrowRightOutlined","CommitFilesPic","Raffy","InteractiveRebaseMac","gitlab","github","bitbucket","CherryPickPic","Navigator","basename","process","exact","path","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e63712d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/interactive-rebase-mac.a1a29c2a.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.3bdd78b9.png\";","module.exports = __webpack_public_path__ + \"static/media/raffy.1a138a48.svg\";","module.exports = __webpack_public_path__ + \"static/media/commit-files.23b2bdf0.png\";","module.exports = __webpack_public_path__ + \"static/media/cherry-pick.a401bb45.png\";","module.exports = __webpack_public_path__ + \"static/media/gitlab.523d5e81.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.ce89173e.svg\";","module.exports = __webpack_public_path__ + \"static/media/bitbucket.9c517cee.svg\";","import { PageHeader, Button, Row } from \"antd\";\nimport { ArrowRightOutlined } from \"@ant-design/icons\";\nimport React from \"react\";\nimport \"./index.css\";\nimport Logo from \"../../resources/logo.png\";\n\nconst Header = () => {\n  return (\n    <PageHeader\n      className=\"header_root\"\n      title={\n        <div>\n          <img src={Logo} height=\"48px\" />\n        </div>\n      }\n      ghost={false}\n      extra={\n        <div style={{ display: \"flex\", alignItems: \"center\", height: \"100%\" }}>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\"\n          >\n          </a>\n        </div>\n      }\n    />\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Layout, Typography, Row, Button} from \"antd\";\nimport { IoLogoBitbucket } from \"react-icons/io\";\nimport \"./index.css\";\nimport { useLocation } from \"react-router\";\n\nconst { Title } = Typography;\n\nconst Bitbucket = () => {\n const location = useLocation();\n let authCode = new URLSearchParams(location.search).get(\"code\");\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=bitbucket&time=${Date.now()}`\n console.log(deeplink);\n\n  return (\n    <Layout>\n        <Layout.Header \n            style = {{\n                height : \"10vh\",\n                width: \"100vw\",\n                backgroundColor: \"#2684FF\"\n            }}\n        />\n        <Layout.Content\n            style = {{\n                height : \"80vh\",\n                width: \"100vw\",\n                backgroundColor: \"#2684FF\"\n            }}        \n        >\n            <Row align=\"middle\" justify=\"center\">\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\n            </Row>\n            <Row align=\"middle\" justify=\"center\">\n                <IoLogoBitbucket size={128} style = {{color : \"white\"}}/>\n            </Row>\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\n                    className=\"buttons flatbutt\"\n                    style= {{\n                        backgroundColor : \"#0357D1\",\n                        border : \"0\"\n                    }}\n                    >\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Bitbucket Authentication</a>\n                    </Button>\n            </Row>\n        </Layout.Content>\n        <Layout.Footer \n            style = {{\n                height : \"10vh\",\n                width: \"100vw\",\n                backgroundColor: \"#2684FF\"\n            }}\n        />\n    </Layout>\n  );\n};\n\nexport default Bitbucket;","import React from \"react\";\nimport { Layout, Typography, Row, Button} from \"antd\";\nimport { FaGitlab } from \"react-icons/fa\";\nimport \"./index.css\";\nimport { useLocation } from \"react-router\";\n\nconst { Title } = Typography;\n\nconst Gitlab = () => {\n const location = useLocation();\n let authCode = new URLSearchParams(location.search).get(\"code\");\n let deeplink = `gitraffe://#add-account?visible=true&code=${authCode}&service=gitlab&time=${Date.now()}`\n console.log(deeplink);\n\n  return (\n    <Layout>\n        <Layout.Header \n            style = {{\n                height : \"10vh\",\n                width: \"100vw\",\n                backgroundColor: \"#FC6D27\"\n            }}\n        />\n        <Layout.Content\n            style = {{\n                height : \"80vh\",\n                width: \"100vw\",\n                backgroundColor: \"#FC6D27\"\n            }}        \n        >\n            <Row align=\"middle\" justify=\"center\">\n                <Title style={{color : \"white\", fontWeight : 300, alignContent : \"center\"}}>Gitraffe has successfully connected to </Title>\n            </Row>\n            <Row align=\"middle\" justify=\"center\">\n                <FaGitlab size={128} style = {{color : \"white\"}}/>\n            </Row>\n            <Row align=\"middle\" justify=\"center\" style = {{marginTop: \"5vh\"}}>\n                <Button type=\"primary\" shape=\"round\" size={\"large\"}\n                    className=\"buttons flatbutt\"\n                    style= {{\n                        backgroundColor : \"#E2432A\",\n                        border : \"0\"\n                    }}\n                    >\n                    <a href = {deeplink} style={{textDecoration : \"none\"}}>Complete Gitlab Authentication</a>\n                    </Button>\n            </Row>\n        </Layout.Content>\n        <Layout.Footer \n            style = {{\n                height : \"10vh\",\n                width: \"100vw\",\n                backgroundColor: \"#FC6D27\"\n            }}\n        />\n    </Layout>\n  );\n};\n\nexport default Gitlab;","import React, { CSSProperties } from \"react\";\nimport \"./index.css\";\n\ntype PortalProps = {\n  color: \"purple\" | \"magenta\" | \"blue\" | \"black\" | \"yellow\" | \"green\";\n  children?: JSX.Element | React.ReactNode;\n  style?: CSSProperties;\n  imageSrc?: string;\n  imageFirst?: boolean;\n  title?: string | JSX.Element;\n  slogan?: string | JSX.Element;\n  description?: string | JSX.Element;\n  imageStyle?: CSSProperties;\n  noImageStyle?: boolean;\n  textMargin?: string;\n  textExtra?: JSX.Element | React.ReactNode;\n};\n\nconst PortalImage = (props: PortalProps) => (\n  <img\n    src={props.imageSrc}\n    style={\n      props.noImageStyle\n        ? props.imageStyle\n        : {\n            filter: \"drop-shadow(0 0 1rem #2a2a2a)\",\n            maxWidth: \"100%\",\n            minWidth: \"min(400px, 100%)\",\n            flex: \"2 1\",\n            ...props.imageStyle,\n          }\n    }\n  />\n);\n\nconst TextOnly = (props: PortalProps) => (\n  <div style={{ color: \"white\", fontSize: \"18px\" }}>\n    {props.title && (\n      <div style={{ fontSize: \"28px\", fontWeight: 650 }}>{props.title}</div>\n    )}\n    {props.slogan && (\n      <div style={{ fontSize: \"36px\", fontWeight: 600 }}>{props.slogan}</div>\n    )}\n    {props.description && (\n      <div style={{ fontSize: \"22px\", fontWeight: 550 }}>\n        {props.description}\n      </div>\n    )}\n    {props.textExtra}\n  </div>\n);\n\nconst WithImage = (props: PortalProps) => (\n  <div style={{ color: \"black\", fontSize: \"18px\" }}>\n    <div\n      style={{\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"center\",\n        color: \"rgba(255, 255, 255, 0.95)\",\n      }}\n    >\n      {props.imageFirst && <PortalImage {...props} />}\n      <div style={{ flex: \"1 1\", margin: props.textMargin ?? \"5vw\" }}>\n        <div\n          style={{\n            fontSize: \"28px\",\n            fontWeight: 650,\n            color: \"rgba(255, 255, 255, 0.7)\",\n          }}\n        >\n          {props.title}\n        </div>\n        <div\n          style={{\n            fontSize: \"36px\",\n            fontWeight: 600,\n            color: \"rgba(255, 255, 255, 0.95)\",\n            marginTop: \"4px\",\n          }}\n        >\n          {props.slogan}\n        </div>\n        <div\n          style={{\n            fontSize: \"22px\",\n            fontWeight: 550,\n            marginTop: \"16px\",\n          }}\n        >\n          {props.description}\n        </div>\n      </div>\n      {!props.imageFirst && <PortalImage {...props} />}\n    </div>\n  </div>\n);\n\nconst Portal = (props: PortalProps) => {\n  return (\n    <div\n      className={`portal-${props.color}`}\n      style={{\n        borderRadius: \"10px\",\n        padding: \"48px\",\n        margin: \"18px\",\n        ...props.style,\n      }}\n    >\n      {props.imageSrc ? <WithImage {...props} /> : <TextOnly {...props} />}\n    </div>\n  );\n};\n\nexport default Portal;\n","import React from \"react\";\nimport { Layout, Typography, Row, Button } from \"antd\";\nimport {\n  AppleFilled,\n  ArrowRightOutlined,\n  GithubFilled,\n  GitlabFilled,\n  WindowsFilled,\n} from \"@ant-design/icons\";\nimport { FaBitbucket, FaUbuntu } from \"react-icons/fa\";\nimport \"./index.css\";\nimport InteractiveRebaseMac from \"../../resources/interactive-rebase-mac.png\";\nimport Header from \"../../components/header\";\nimport { useLocation, withRouter } from \"react-router\";\nimport Bitbucket from \"../bitbucket\";\nimport Gitlab from \"../gitlab\";\nimport Raffy from \"../../resources/raffy.svg\";\nimport Portal from \"../../components/portal\";\nimport CommitFilesPic from \"../../resources/commit-files.png\";\nimport CherryPickPic from \"../../resources/cherry-pick.png\";\nimport gitlab from \"./gitlab.svg\";\nimport github from \"./github.svg\";\nimport bitbucket from \"./bitbucket.svg\";\n\nconst { Content, Footer } = Layout;\nconst { Title, Paragraph, Text } = Typography;\n\nconst Home = () => {\n  const location = useLocation();\n  let authCode = new URLSearchParams(location.search).get(\"code\");\n  let provider = new URLSearchParams(location.search).get(\"provider\");\n\n  console.log(location);\n\n  if (provider == \"bitbucket\") return <Bitbucket />;\n  else if (provider == \"gitlab\") return <Gitlab />;\n  else {\n    return (\n      <div style={{ background: \"white\", width: \"100%\" }}>\n        <Header />\n        <div className=\"home_cards-container\">\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <Portal\n              color=\"blue\"\n              style={{\n                flex: \"1.25 1\",\n                minWidth: \"min(400px, calc(100% - 36px))\",\n                boxSizing: \"border-box\",\n              }}\n              title=\"Gitraffe\"\n              slogan=\"Supercharge Programmer Productivity\"\n              description=\"Available on Windows, Mac, and Linux.\"\n            />\n\n            <Portal\n              color=\"black\"\n              style={{\n                flex: \"1 1\",\n                minWidth: \"min(400px, calc(100% - 36px))\",\n                boxSizing: \"border-box\",\n              }}\n              slogan=\"Our private beta has started!\"\n              description=\"Simply fill out a form to request access, and we will be in touch.\"\n              textExtra={\n                <div style={{ marginTop: \"8px\" }}>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://x836on4k62z.typeform.com/to/KGopr4aR\"\n                  >\n                                <Button\n                                type=\"primary\"\n                                shape=\"round\"\n                                size={\"large\"}\n                                style={{\n                                  background: \"linear-gradient(45deg, #ee0979, #ff6a00)\",\n                                  borderWidth: \"0\",\n                                  verticalAlign: \"middle\",\n                                }}\n            >\n              Request Access <ArrowRightOutlined />\n            </Button>\n                  </a>\n                </div>\n              }\n            />\n          </div>\n\n          <Portal\n            color=\"magenta\"\n            title=\"Commit Changes\"\n            slogan=\"Just select the files to commit and describe your changes.\"\n            description=\"Not ready to commit? Stash all changes with one click.\"\n            imageSrc={CommitFilesPic}\n          />\n\n          <Portal\n            color=\"green\"\n            imageSrc={Raffy}\n            imageFirst\n            imageStyle={{height: \"40vh\"}}\n            title=\"Productivity Assistant\"\n            slogan=\"Meet Raffy, your personal Git assistant.\"\n            description=\"Raffy guides you through operations, understands what you're trying to perform, and helps you perform Quick Actions.\"\n          />\n\n          <Portal\n            color=\"yellow\"\n            imageSrc={InteractiveRebaseMac}\n            imageFirst\n            title=\"Interactive Rebase\"\n            slogan=\"The power to change commit history, at your fingertips.\"\n            description=\"Easily change previous commit messages, squash commits, fixup commits, and re-order commits.\"\n          />\n\n          <Portal\n            color=\"purple\"\n            title={\n              <Row align=\"middle\" justify=\"center\" style={{color: \"rgba(255, 255, 255, 0.8)\"}}>\n                Integrations\n              </Row>\n            }\n            slogan={\n              <Row align=\"middle\" justify=\"center\">\n                There is no limit to how many accounts you can connect to Gitraffe.\n              </Row>\n            }\n            description={\n              <Row align=\"middle\" justify=\"center\">\n                Gitraffe supports some of the most popular Git Hosting Services.\n              </Row>\n            }\n            textExtra = {\n              <Row align = \"middle\" justify=\"center\">\n                <a href=\"https://www.gitlab.com\"><img src={gitlab} style={{height: \"8vh\",margin: \"5vw\"}}/></a>\n                <a href=\"https://www.github.com\"><img src={github} style={{height: \"8vh\", margin: \"5vw\"}}/></a>\n                <a href=\"https://www.bitbucket.com\"><img src={bitbucket} style={{height: \"8vh\", margin: \"5vw\"}}/></a>\n              </Row>\n            }\n          />\n\n          <Portal\n            color=\"blue\"\n            imageSrc={CherryPickPic}\n            title=\"Cherry Pick\"\n            slogan=\"Accidentally committed to the wrong branch?\"\n            description=\"Don't worry, you can quickly copy commits from one branch to another.\"\n          />\n\n          <Footer\n            style={{\n              borderRadius: \"10px\",\n              margin: \"18px\",\n              background: \"var(--brand-foreground-color)\",\n            }}\n          >\n            <Row\n              align=\"middle\"\n              justify=\"center\"\n              style={{ width: \"100%\", flex: \"0 0 auto\" }}\n            >\n              <div\n                style={{ color: \"white\", fontSize: \"16px\", fontWeight: 550 }}\n              >\n                Team Raffe&nbsp; © 2021\n              </div>\n            </Row>\n          </Footer>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default withRouter(Home);\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch as RouterSwitch } from \"react-router-dom\";\nimport Home from \"../../pages/home\";\nimport Bitbucket from \"../../pages/bitbucket\";\nimport Gitlab from \"../../pages/gitlab\";\n\nconst Navigator = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <RouterSwitch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </RouterSwitch>\n    </BrowserRouter>\n  );\n};\n\nexport default Navigator;\n","import React from \"react\";\nimport \"./index.css\";\nimport { Layout } from \"antd\";\nimport Navigator from \"../navigator\";\n\nconst App = () => {\n  return (\n    <Layout className=\"application_layout\">\n      <Layout.Content>\n        <Navigator />\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/application\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}